백트래킹 기법
 - 해가 아니면 되돌아가서 다시 해를 찾아 가는 기법
 - 최적화(optimization) 문제와 결정(decision) 문제 해결 가능
 - ex) N-Queen 문제, 미로 찾기, Map Coloring, 부분 집합의 합 문제
 - 초기 상태에서 목표 상태로 가는 경로를 탐색하는 기법
 -> 여러 선택지 중 1가지를 선택 -> 선택 후 새로운 선택지 생성 -> 선택을 반복하다 최종 상태에 도달 -> 올바른 선택들을 계속 하면 목표 상태에 도달
 * 상태 공간 트리
  - 해를 찾기 위한 과정을 트리로 표현한 것

* 일반적인 백트래킹 알고리즘
checknode (Node v){                     // 상태 공간 트리에서 현재 방문하는 노드
    if promising(v){                    // 현재 방문 노드의 유망성을 점검하고 유망하면 탐색을 계속 진행하고 유망하지 않은 경우 탐색을 종료
        if(there is a solution at v){   // 단말노드에 도착하면 찾으려는 해인지 검사
            write the solution          // 찾은 해를 출력
        }else{                          // 단말 노드가 아니라면 모든 자식 노드를 방문하기 위해 재귀호출을 실행
            for( each child u of v ){
                checknode(u)
            }
        }
    }
}

부분 집합
 * 파워 셋(Power Set)
  - 어떤 집합의 공집합과 자기 자신을 포함한 모든 부분집합 -> 구하고자 하는 집합의 원소 개수가 n일 경우 부분집합의 개수는 2^n이다.
  
